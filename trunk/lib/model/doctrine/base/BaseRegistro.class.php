<?php

/**
 * BaseRegistro
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $empresa_id
 * @property integer $chofer_id
 * @property integer $tracto_id
 * @property integer $carreta_id
 * @property integer $lugar_id
 * @property integer $tipo_carga_id
 * @property integer $motivo_id
 * @property integer $cantidad
 * @property string $guia1
 * @property string $guia2
 * @property integer $estado
 * @property string $observacion
 * @property timestamp $ingreso_at
 * @property Empresa $Empresa
 * @property Chofer $Chofer
 * @property Tracto $Tracto
 * @property Carreta $Carreta
 * @property Lugar $Lugar
 * @property TipoCarga $TipoCarga
 * @property Motivo $Motivo
 * @property Doctrine_Collection $Operacion
 * @property Doctrine_Collection $Salida
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method integer             getEmpresaId()     Returns the current record's "empresa_id" value
 * @method integer             getChoferId()      Returns the current record's "chofer_id" value
 * @method integer             getTractoId()      Returns the current record's "tracto_id" value
 * @method integer             getCarretaId()     Returns the current record's "carreta_id" value
 * @method integer             getLugarId()       Returns the current record's "lugar_id" value
 * @method integer             getTipoCargaId()   Returns the current record's "tipo_carga_id" value
 * @method integer             getMotivoId()      Returns the current record's "motivo_id" value
 * @method integer             getCantidad()      Returns the current record's "cantidad" value
 * @method string              getGuia1()         Returns the current record's "guia1" value
 * @method string              getGuia2()         Returns the current record's "guia2" value
 * @method integer             getEstado()        Returns the current record's "estado" value
 * @method string              getObservacion()   Returns the current record's "observacion" value
 * @method timestamp           getIngresoAt()     Returns the current record's "ingreso_at" value
 * @method Empresa             getEmpresa()       Returns the current record's "Empresa" value
 * @method Chofer              getChofer()        Returns the current record's "Chofer" value
 * @method Tracto              getTracto()        Returns the current record's "Tracto" value
 * @method Carreta             getCarreta()       Returns the current record's "Carreta" value
 * @method Lugar               getLugar()         Returns the current record's "Lugar" value
 * @method TipoCarga           getTipoCarga()     Returns the current record's "TipoCarga" value
 * @method Motivo              getMotivo()        Returns the current record's "Motivo" value
 * @method Doctrine_Collection getOperacion()     Returns the current record's "Operacion" collection
 * @method Doctrine_Collection getSalida()        Returns the current record's "Salida" collection
 * @method Registro            setId()            Sets the current record's "id" value
 * @method Registro            setEmpresaId()     Sets the current record's "empresa_id" value
 * @method Registro            setChoferId()      Sets the current record's "chofer_id" value
 * @method Registro            setTractoId()      Sets the current record's "tracto_id" value
 * @method Registro            setCarretaId()     Sets the current record's "carreta_id" value
 * @method Registro            setLugarId()       Sets the current record's "lugar_id" value
 * @method Registro            setTipoCargaId()   Sets the current record's "tipo_carga_id" value
 * @method Registro            setMotivoId()      Sets the current record's "motivo_id" value
 * @method Registro            setCantidad()      Sets the current record's "cantidad" value
 * @method Registro            setGuia1()         Sets the current record's "guia1" value
 * @method Registro            setGuia2()         Sets the current record's "guia2" value
 * @method Registro            setEstado()        Sets the current record's "estado" value
 * @method Registro            setObservacion()   Sets the current record's "observacion" value
 * @method Registro            setIngresoAt()     Sets the current record's "ingreso_at" value
 * @method Registro            setEmpresa()       Sets the current record's "Empresa" value
 * @method Registro            setChofer()        Sets the current record's "Chofer" value
 * @method Registro            setTracto()        Sets the current record's "Tracto" value
 * @method Registro            setCarreta()       Sets the current record's "Carreta" value
 * @method Registro            setLugar()         Sets the current record's "Lugar" value
 * @method Registro            setTipoCarga()     Sets the current record's "TipoCarga" value
 * @method Registro            setMotivo()        Sets the current record's "Motivo" value
 * @method Registro            setOperacion()     Sets the current record's "Operacion" collection
 * @method Registro            setSalida()        Sets the current record's "Salida" collection
 * 
 * @package    transporte
 * @subpackage model
 * @author     ejosvp
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseRegistro extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('registro');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('empresa_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('chofer_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('tracto_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('carreta_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('lugar_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('tipo_carga_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('motivo_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('cantidad', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('guia1', 'string', 15, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '15',
             ));
        $this->hasColumn('guia2', 'string', 15, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '15',
             ));
        $this->hasColumn('estado', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '1',
             ));
        $this->hasColumn('observacion', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('ingreso_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Chofer', array(
             'local' => 'chofer_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Tracto', array(
             'local' => 'tracto_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Carreta', array(
             'local' => 'carreta_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Lugar', array(
             'local' => 'lugar_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('TipoCarga', array(
             'local' => 'tipo_carga_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Motivo', array(
             'local' => 'motivo_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('Operacion', array(
             'local' => 'id',
             'foreign' => 'registro_id'));

        $this->hasMany('Salida', array(
             'local' => 'id',
             'foreign' => 'registro_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}